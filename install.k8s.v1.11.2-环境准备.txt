1.初始化环境
##1.1 主机名

设置永久主机名称，然后重新登录:

``` bash
$ sudo hostnamectl set-hostname kube-node1 # 将 kube-node1 替换为当前主机名
```
+ 设置的主机名保存在 `/etc/hostname` 文件中；
# Node 节点
$ echo "node0.localdomain" > /etc/hostname 
$ echo "10.236.65.135   node0.localdomain" >> /etc/hosts
$ sysctl kernel.hostname=node0.localdomain # 不重启情况下使内核修改生效

修改每台机器的 `/etc/hosts` 文件，添加主机名和 IP 的对应关系：


在每台机器上添加 docker 账户，将 k8s 账户添加到 docker 组中，同时配置 dockerd 参数：

``` bash
$ sudo useradd -m docker
$ sudo gpasswd -a k8s docker
$ sudo mkdir -p  /etc/docker/

$ sudo cp /etc/kubernetes/admin.conf $HOME/
$ sudo chown $(id -u):$(id -g) $HOME/admin.conf
$ export KUBECONFIG=$HOME/admin.conf


$ cat /etc/docker/daemon.json
{
    "registry-mirrors": ["private.docker.hub:5000"],
    "max-concurrent-downloads": 20
}


## 安装依赖包

在每台机器上安装依赖包：

CentOS:

``` bash
$ sudo yum install -y epel-release
$ sudo yum install -y conntrack ipvsadm ipset jq sysstat curl iptables libseccomp
$ sudo yum install -y yum-utils device-mapper-persistent-data lvm2 net-tools conntrack-tools wget vim  ntpdate libseccomp libtool-ltdl 

Ubuntu:

``` bash
$ sudo apt-get install -y conntrack ipvsadm ipset jq sysstat curl iptables libseccomp
```
+ ipvs 依赖 ipset；

## 关闭防火墙

在每台机器上关闭防火墙：

``` bash
$ sudo systemctl stop firewalld
$ sudo systemctl disable firewalld
$systemctl stop firewalld && systemctl disable firewalld
$ sudo iptables -F && sudo iptables -X && sudo iptables -F -t nat && sudo iptables -X -t nat
$ sudo sudo iptables -P FORWARD ACCEPT
```
vi /etc/sysconfig/iptables

添加：

-A INPUT -p udp -m udp --sport 123 -j ACCEPT

## 关闭 swap 分区

如果开启了 swap 分区，kubelet 会启动失败(可以通过将参数 --fail-swap-on 设置为 false 来忽略 swap on)，故需要在每台机器上关闭 swap 分区：

``` bash
$ sudo swapoff -a
```

为了防止开机自动挂载 swap 分区，可以注释 `/etc/fstab` 中相应的条目：
swapoff -a
cp -p /etc/fstab /etc/fstab.bak$(date '+%Y%m%d%H%M%S')
sed -i "s/\/dev\/mapper\/rhel-swap/\#\/dev\/mapper\/rhel-swap/g" /etc/fstab
sed -i "s/\/dev\/mapper\/centos-swap/\#\/dev\/mapper\/centos-swap/g" /etc/fstab

``` bash
匹配行的行首添加，添加在同行
[root@1MDocker ~]# sed '/World/s/^/#/' myfile
#Hello World
sed -i 's/.*swap.*/#&/' /etc/fstab

#/dev/mapper/VolGroup-lv_swap swap

$ sudo sed -i '/swap/s/^\(.*\)$/#\1/g' /etc/fstab
```

## 关闭 SELinux

关闭 SELinux，否则后续 K8S 挂载目录时可能报错 `Permission denied`：

``` bash
$ sudo setenforce 0
sed -i "s/^SELINUX=enforcing/SELINUX=disabled/g" /etc/sysconfig/selinux 

sed -i "s/^SELINUX=enforcing/SELINUX=disabled/g" /etc/sysconfig/selinux 
sed -i "s/^SELINUX=enforcing/SELINUX=disabled/g" /etc/selinux/config 
sed -i "s/^SELINUX=permissive/SELINUX=disabled/g" /etc/sysconfig/selinux
sed -i "s/^SELINUX=permissive/SELINUX=disabled/g" /etc/selinux/config  


$ grep SELINUX /etc/selinux/config 
SELINUX=disabled
```
+ 修改配置文件，永久生效；

## 关闭 dnsmasq

linux 系统开启了 dnsmasq 后(如 GUI 环境)，将系统 DNS Server 设置为 127.0.0.1，这会导致 docker 容器无法解析域名，需要关闭它：

``` bash
$ sudo service dnsmasq stop
$ sudo systemctl disable dnsmasq
```

## 设置系统参数

``` bash
$ cat > kubernetes.conf <<EOF
net.bridge.bridge-nf-call-iptables=1
net.bridge.bridge-nf-call-ip6tables=1
net.ipv4.ip_forward=1
vm.swappiness=0
vm.overcommit_memory=1
vm.panic_on_oom=0
fs.inotify.max_user_watches=89100
EOF
$ sudo cp kubernetes.conf  /etc/sysctl.d/kubernetes.conf
$ sudo sysctl -p /etc/sysctl.d/kubernetes.conf

1. vi /etc/security/limits.d/90-nproc.conf 
注释掉 * soft nproc 1024
sed -i 's/.*nproc.*/#&/' /etc/security/limits.d/90-nproc.conf 

2. vi /etc/security/limits.conf

echo "* soft nofile 1048576" >> /etc/security/limits.conf
echo "* hard nofile 1048576" >> /etc/security/limits.conf
echo "* soft nproc 1048576"  >> /etc/security/limits.conf
echo "* hard nproc 1048576"  >> /etc/security/limits.conf
echo "* soft  memlock  unlimited"  >> /etc/security/limits.conf
echo "* hard memlock  unlimited"  >> /etc/security/limits.conf
echo " net.core.somaxconn = 262144" >> /etc/sysctl.conf




## 加载内核模块

``` bash
$ sudo modprobe br_netfilter
$ sudo modprobe ip_vs
```

## 设置系统时区

``` bash
$ # 调整系统 TimeZone
$ sudo timedatectl set-timezone Asia/Shanghai

$ # 将当前的 UTC 时间写入硬件时钟
$ sudo timedatectl set-local-rtc 0

$时间同步
yum install -y ntpdate

编辑vi /etc/crontab
0 1 * * * root ntpdate 192.168.104.91;/sbin/hwclock -w
说明：每天凌晨1点从ntp服务器192.168.4.183同步时间。

systemctl enable ntpdate.service
echo '*/30 * * * * /usr/sbin/ntpdate time7.aliyun.com >/dev/null 2>&1' > /tmp/crontab2.tmp
crontab /tmp/crontab2.tmp
systemctl start ntpdate.service

 重启定时命令：
/etc/init.d/crond restart



#功能点3：查看容器的语言环境：

[root@12ec64254bc4 /]# locale
LANG=
LC_CTYPE="POSIX"
LC_NUMERIC="POSIX"
LC_TIME="POSIX"
LC_COLLATE="POSIX"
LC_MONETARY="POSIX"
LC_MESSAGES="POSIX"
LC_PAPER="POSIX"
LC_NAME="POSIX"
LC_ADDRESS="POSIX"
LC_TELEPHONE="POSIX"
LC_MEASUREMENT="POSIX"
LC_IDENTIFICATION="POSIX"
LC_ALL=



查看容器支持的语言：

[root@12ec64254bc4 /]# locale -a
C
POSIX
en_US.utf8
zh_CN.utf8



设置字符集为zh.CN.utf8:

[root@12ec64254bc4 zhai]# LANG=zh.CN.utf8



重新加载环境变量：
[root@12ec64254bc4 zhai]# source /etc/profile



再次查看：

[root@12ec64254bc4 zhai]# locale
LANG=
LC_CTYPE="zh_CN.UTF-8"
LC_NUMERIC="zh_CN.UTF-8"
LC_TIME="zh_CN.UTF-8"
LC_COLLATE="zh_CN.UTF-8"
LC_MONETARY="zh_CN.UTF-8"
LC_MESSAGES="zh_CN.UTF-8"
LC_PAPER="zh_CN.UTF-8"
LC_NAME="zh_CN.UTF-8"
LC_ADDRESS="zh_CN.UTF-8"
LC_TELEPHONE="zh_CN.UTF-8"
LC_MEASUREMENT="zh_CN.UTF-8"
LC_IDENTIFICATION="zh_CN.UTF-8"
LC_ALL=zh_CN.UTF-8

https://www.kubernetes.org.cn/3808.html

https://blog.csdn.net/aixiaoyang168/article/details/78411511?from=singlemessage&isappinstalled=0

https://blog.csdn.net/watermelonbig/article/details/80879218?from=singlemessage&isappinstalled=0#t9

https://www.jianshu.com/p/6650954fa973








